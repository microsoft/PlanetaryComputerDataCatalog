#!/bin/bash

set -e

params=()
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    if [[ "${1:-}" == "--devdocs" ]]; then
        params+=("http://host.docker.internal:8889")
    fi
fi

DOCS_OUTPUT="_docs_output"
DOCS_SOURCE="../docs/"
DOCS_WORKING_DIR="_docs_working_dir"

# Sync external documentation notebooks locally before building
# and override the root external doc URL if in devdocs mode
rm -rf "${DOCS_WORKING_DIR:?}"/* || true
python3 ./scripts/external_docs_sync.py "${params[@]}"

# Copy the local-sourced doc files to the working directory, which
# contain the externally synced doc files
rsync -r "${DOCS_SOURCE}" "${DOCS_WORKING_DIR}"

# Build the docs directory with the JSON output type.
sphinx-build -b json "${DOCS_WORKING_DIR}" "${DOCS_OUTPUT}" -v

# Copy over all of the *.fjson files to our src/docs directory,
# preserving the directory structure.
pushd $DOCS_OUTPUT
find . -name '*.fjson' -exec cp --parents \{\} ../../src/docs \;
popd

# Not currently using these files, remove them so they aren't imported
# into the app.
rm ../src/docs/genindex.fjson
rm ../src/docs/search.fjson

# Rename all fjson files to json.
# See: https://mywiki.wooledge.org/BashFAQ/030
find ../src/docs -type f -name '*.fjson' -print0 | while IFS= read -r -d '' f; do
  mv -- "$f" "${f%.fjson}.json"
done

# We also need the contents of the _images directory moved to the static build
# directory. Since these aren't imported into the app, they are not put in the
# src tree.
pushd $DOCS_OUTPUT
cp --parents _images/*.{png,jpg,gif} ../../public || true
popd

# We also need the contents of the _downloads directory moved to the static build
# directory. Since these aren't imported into the app, they are not put in the
# src tree.
pushd $DOCS_OUTPUT
cp --parents _downloads/**/* ../../public || true
popd
